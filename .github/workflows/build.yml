name: build

on:
    push:
        branches:
            - main
    pull_request:

permissions:
    actions: read
    contents: read
    packages: write

env:
    REGISTRY: ghcr.io
    BACKEND_IMAGE: aofg/backend

jobs:
    main:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            # Connect your workspace on nx.app and uncomment this to enable task distribution.
            # The "--stop-agents-after" is optional, but allows idle agents to shut down once the "e2e-ci" targets have been requested
            # - run: npx nx-cloud start-ci-run --distribute-on="5 linux-medium-js" --stop-agents-after="e2e-ci"

            # Cache node_modules
            - uses: actions/setup-node@v3
              with:
                  node-version: 20
                  cache: 'npm'

            - run: npm ci
            - uses: nrwl/nx-set-shas@v4

            - name: Login to GHCR
              if: github.event_name != 'pull_request'
              uses: docker/login-action@v2
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - run: npx nx-cloud record -- nx format:check
            - run: INPUT_GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} npx nx affected --base=$NX_BASE --head=$NX_HEAD -t lint build container

    deploy:
        runs-on: ubuntu-latest
        needs: main

        strategy:
            matrix:
                namespace: ['production', 'develop']

        permissions:
            id-token: write
            contents: read

        steps:
            - uses: actions/checkout@v3

            - name: Set environment variables
              run: |
                  # Short name for current branch. For PRs, use target branch (base ref)
                  GIT_BRANCH=${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}
                  GIT_BRANCH=${GIT_BRANCH//\//-} # Replace / with -
                  GIT_BRANCH=${GIT_BRANCH//_/-} # Replace _ with -
                  GIT_BRANCH=${GIT_BRANCH,,} # Lower case
                  HELM_SHORT=`echo "${{ github.event.repository.name }}" | cut -c -52`
                  echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
                  echo "HELM_SHORT=$HELM_SHORT" >> $GITHUB_ENV

            - name: Install doctl and Authorize to Digital Ocean
              uses: digitalocean/action-doctl@v2
              with:
                  token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

            - name: Login to registry
              run: doctl registry login --expiry-seconds 3600

            - name: Save DigitalOcean kubeconfig with short-lived credentials
              run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.DIGITALOCEAN_K8S_CLUSTER_ID }}

            - name: Docker Image Tag
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE }}
                  tags: type=sha

            - name: Deploy
              if: github.ref == 'refs/heads/main' || matrix.namespace != 'production'
              run: |
                  helm upgrade --install $HELM_SHORT ./.helm --namespace ${{ matrix.namespace }} --set image=${{ steps.meta.outputs.tags }} --set branch=$GIT_BRANCH --dry-run
                  helm upgrade --install $HELM_SHORT ./.helm --namespace ${{ matrix.namespace }} --set image=${{ steps.meta.outputs.tags }} --set branch=$GIT_BRANCH --wait
